pragma solidity ^0.8.0;

import './Test.sol';


contract Deployer {
    bytes public contractBytecode = hex"608060405234801561001057600080fd5b50600080546001600160a01b031916331790556104eb806100326000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630dbe671f146100675780634df7e3d0146100855780638590693c1461009a5780639e535c69146100af578063a6f9dae1146100c4578063fa1dda02146100d7575b600080fd5b61006f6100ea565b60405161007c919061045b565b60405180910390f35b61008d6100f0565b60405161007c91906103e6565b6100ad6100a8366004610319565b61017e565b005b6100b76101c8565b60405161007c91906103d2565b6100ad6100d23660046102eb565b6101d7565b6100ad6100e53660046103ba565b610223565b60015481565b600280546100fd90610464565b80601f016020809104026020016040519081016040528092919081815260200182805461012990610464565b80156101765780601f1061014b57610100808354040283529160200191610176565b820191906000526020600020905b81548152906001019060200180831161015957829003601f168201915b505050505081565b6000546001600160a01b031633146101b15760405162461bcd60e51b81526004016101a890610439565b60405180910390fd5b80516101c4906002906020840190610252565b5050565b6000546001600160a01b031681565b6000546001600160a01b031633146102015760405162461bcd60e51b81526004016101a890610439565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461024d5760405162461bcd60e51b81526004016101a890610439565b600155565b82805461025e90610464565b90600052602060002090601f01602090048101928261028057600085556102c6565b82601f1061029957805160ff19168380011785556102c6565b828001600101855582156102c6579182015b828111156102c65782518255916020019190600101906102ab565b506102d29291506102d6565b5090565b5b808211156102d257600081556001016102d7565b6000602082840312156102fc578081fd5b81356001600160a01b0381168114610312578182fd5b9392505050565b6000602080838503121561032b578182fd5b823567ffffffffffffffff80821115610342578384fd5b818501915085601f830112610355578384fd5b8135818111156103675761036761049f565b604051601f8201601f191681018501838111828210171561038a5761038a61049f565b60405281815283820185018810156103a0578586fd5b818585018683013790810190930193909352509392505050565b6000602082840312156103cb578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610412578581018301518582016040015282016103f6565b818111156104235783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600890820152672327a92124a222a760c11b604082015260600190565b90815260200190565b60028104600182168061047857607f821691505b6020821081141561049957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ec2865b421c545be132a7105996527bfc60e90e26adaab0b54e18b75f137e7ad64736f6c63430008000033";
    address public result;
    address public owner;

    modifier onlyDeployerOwner() {
        require(owner == msg.sender, "FORBIDEN");
        _;
    }

    constructor() {
        owner = msg.sender;
    }

    function deploy(bytes32 salt) public onlyDeployerOwner {
        bytes memory bytecode = contractBytecode;
        address addr;

        assembly {
            addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)
        }

        result = addr;
    }

    // function transferOwner(address _newOwner) public onlyDeployerOwner {
    //     forbitspace(result).changeOwner(_newOwner);
    // }
}

pragma solidity ^0.8.0;

contract Test {
    address public testOwner;
    uint256 public a;
    string public b;

    modifier onlyTestOwner() {
        require(msg.sender == testOwner, "FORBIDEN");
        _;
    }

    constructor() {
        testOwner = msg.sender;
    }

    function updateA(uint256 _a) public onlyTestOwner {
        a = _a;
    }

    function updateB(string memory _b) public onlyTestOwner {
        b = _b;
    }

    function changeOwner(address _newOwner) public onlyTestOwner {
        testOwner = _newOwner;
    }
}

